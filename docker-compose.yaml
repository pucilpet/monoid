version: "3.7"
services:
  db:
    image: postgres:14.6-alpine3.16
    container_name: monoid-db
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
      - ./monoid-api/config-data/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - monoid-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 10
  web:
    container_name: monoid-web
    image: monoidco/monoid-web:0.0.1
    networks:
      - monoid-network
  temporal:
    container_name: monoid-temporal
    depends_on:
      - db
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_SEEDS=monoid-db
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    image: temporalio/auto-setup:1.18.4
    networks:
      - monoid-network
    volumes:
      - ./monoid-api/config-data/temporal:/etc/temporal/config/dynamicconfig
    healthcheck:
      test:
        [
          "CMD",
          "tctl",
          "--address",
          "monoid-temporal:7233",
          "workflow",
          "list"
        ]
      interval: 1s
      timeout: 5s
      retries: 30
  api:
    container_name: monoid-api
    environment:
      - DB_TCP_HOST=monoid-db
      - DB_PORT=5432
      - TEMP_STORE_PATH=/tmp/monoid
      - RESOURCE_PATH=/app/config-data/resources
      - TEMPORAL=monoid-temporal:7233

      # Uncomment these lines if you're using gcs
      # - GOOGLE_CLOUD_JSON=/gcloudcreds.json
      # - GCS_BUCKET=${GCS_BUCKET}
    depends_on:
      db:
        condition: service_healthy
      loader:
        condition: service_completed_successfully
      temporal:
        condition: service_healthy
    networks:
      - monoid-network
    image: monoidco/monoid-api:0.0.1
    volumes:
      - filestore:/filestore
      - tempstore:/tmp/monoid
      - ./monoid-config/resources:/monoid_resources/

      # Uncomment this line if using gcs
      # - ${LOCAL_GOOGLE_CLOUD_JSON}:/gcloudcreds.json
  loader:
    container_name: monoid-loader
    command: /app/config-data
    environment:
      - DB_TCP_HOST=monoid-db
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - monoid-network
    image: monoidco/monoid-loader:0.0.1
  worker:
    container_name: monoid-worker
    environment:
      - DB_TCP_HOST=monoid-db
      - TEMP_STORE_PATH=/tmp/monoid
      - DB_PORT=5432
      - TEMPORAL=monoid-temporal:7233
      # Uncomment these lines if you're using gcs
      # - GOOGLE_CLOUD_JSON=/gcloudcreds.json
      # - GCS_BUCKET=${GCS_BUCKET}
    depends_on:
      db:
        condition: service_healthy
      loader:
        condition: service_completed_successfully
      temporal:
        condition: service_healthy
    networks:
      - monoid-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - filestore:/filestore
      - tempstore:/tmp/monoid

      # Uncomment this line if using gcs
      # - ${LOCAL_GOOGLE_CLOUD_JSON}:/gcloudcreds.json
    image: monoidco/monoid-worker:0.0.1
  proxy:
    depends_on:
      - web
      - api
    container_name: monoid-proxy
    networks:
      - monoid-network
    image: monoidco/monoid-proxy:0.0.1
networks:
  monoid-network:
    driver: bridge
    name: monoid-network
volumes:
  db:
    name: monoid-db
  filestore:
    name: monoid-filestore
  tempstore:
    name: monoid-tempstore
